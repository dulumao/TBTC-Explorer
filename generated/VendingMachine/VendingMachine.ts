// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class VendingMachine extends ethereum.SmartContract {
  static bind(address: Address): VendingMachine {
    return new VendingMachine("VendingMachine", address);
  }

  canMint(amount: BigInt): boolean {
    let result = super.call("canMint", "canMint(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_canMint(amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("canMint", "canMint(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getMaxSupply(): BigInt {
    let result = super.call("getMaxSupply", "getMaxSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getMaxSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getMaxSupply", "getMaxSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMintedSupply(): BigInt {
    let result = super.call(
      "getMintedSupply",
      "getMintedSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getMintedSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMintedSupply",
      "getMintedSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isQualified(_depositAddress: Address): boolean {
    let result = super.call("isQualified", "isQualified(address):(bool)", [
      ethereum.Value.fromAddress(_depositAddress)
    ]);

    return result[0].toBoolean();
  }

  try_isQualified(_depositAddress: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isQualified", "isQualified(address):(bool)", [
      ethereum.Value.fromAddress(_depositAddress)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _systemAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetExternalAddressesCall extends ethereum.Call {
  get inputs(): SetExternalAddressesCall__Inputs {
    return new SetExternalAddressesCall__Inputs(this);
  }

  get outputs(): SetExternalAddressesCall__Outputs {
    return new SetExternalAddressesCall__Outputs(this);
  }
}

export class SetExternalAddressesCall__Inputs {
  _call: SetExternalAddressesCall;

  constructor(call: SetExternalAddressesCall) {
    this._call = call;
  }

  get _tbtcToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tbtcDepositToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeRebateToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetExternalAddressesCall__Outputs {
  _call: SetExternalAddressesCall;

  constructor(call: SetExternalAddressesCall) {
    this._call = call;
  }
}

export class TbtcToBtcCall extends ethereum.Call {
  get inputs(): TbtcToBtcCall__Inputs {
    return new TbtcToBtcCall__Inputs(this);
  }

  get outputs(): TbtcToBtcCall__Outputs {
    return new TbtcToBtcCall__Outputs(this);
  }
}

export class TbtcToBtcCall__Inputs {
  _call: TbtcToBtcCall;

  constructor(call: TbtcToBtcCall) {
    this._call = call;
  }

  get _depositAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _outputValueBytes(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _redeemerOutputScript(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class TbtcToBtcCall__Outputs {
  _call: TbtcToBtcCall;

  constructor(call: TbtcToBtcCall) {
    this._call = call;
  }
}

export class TbtcToTdtCall extends ethereum.Call {
  get inputs(): TbtcToTdtCall__Inputs {
    return new TbtcToTdtCall__Inputs(this);
  }

  get outputs(): TbtcToTdtCall__Outputs {
    return new TbtcToTdtCall__Outputs(this);
  }
}

export class TbtcToTdtCall__Inputs {
  _call: TbtcToTdtCall;

  constructor(call: TbtcToTdtCall) {
    this._call = call;
  }

  get _tdtId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TbtcToTdtCall__Outputs {
  _call: TbtcToTdtCall;

  constructor(call: TbtcToTdtCall) {
    this._call = call;
  }
}

export class TdtToTbtcCall extends ethereum.Call {
  get inputs(): TdtToTbtcCall__Inputs {
    return new TdtToTbtcCall__Inputs(this);
  }

  get outputs(): TdtToTbtcCall__Outputs {
    return new TdtToTbtcCall__Outputs(this);
  }
}

export class TdtToTbtcCall__Inputs {
  _call: TdtToTbtcCall;

  constructor(call: TdtToTbtcCall) {
    this._call = call;
  }

  get _tdtId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TdtToTbtcCall__Outputs {
  _call: TdtToTbtcCall;

  constructor(call: TdtToTbtcCall) {
    this._call = call;
  }
}

export class UnqualifiedDepositToTbtcCall extends ethereum.Call {
  get inputs(): UnqualifiedDepositToTbtcCall__Inputs {
    return new UnqualifiedDepositToTbtcCall__Inputs(this);
  }

  get outputs(): UnqualifiedDepositToTbtcCall__Outputs {
    return new UnqualifiedDepositToTbtcCall__Outputs(this);
  }
}

export class UnqualifiedDepositToTbtcCall__Inputs {
  _call: UnqualifiedDepositToTbtcCall;

  constructor(call: UnqualifiedDepositToTbtcCall) {
    this._call = call;
  }

  get _depositAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _txVersion(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _txInputVector(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _txOutputVector(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get _txLocktime(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get _fundingOutputIndex(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get _merkleProof(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get _txIndexInBlock(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _bitcoinHeaders(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class UnqualifiedDepositToTbtcCall__Outputs {
  _call: UnqualifiedDepositToTbtcCall;

  constructor(call: UnqualifiedDepositToTbtcCall) {
    this._call = call;
  }
}
