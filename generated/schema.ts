// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Deposit extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Deposit entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Deposit entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Deposit", id.toString(), this);
  }

  static load(id: string): Deposit | null {
    return store.get("Deposit", id) as Deposit | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get state(): string {
    let value = this.get("state");
    return value.toString();
  }

  set state(value: string) {
    this.set("state", Value.fromString(value));
  }

  get owner(): Bytes {
    let value = this.get("owner");
    return value.toBytes();
  }

  set owner(value: Bytes) {
    this.set("owner", Value.fromBytes(value));
  }

  get lotSize(): BigInt {
    let value = this.get("lotSize");
    return value.toBigInt();
  }

  set lotSize(value: BigInt) {
    this.set("lotSize", Value.fromBigInt(value));
  }

  get depositContract(): Bytes | null {
    let value = this.get("depositContract");
    if (value === null) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set depositContract(value: Bytes | null) {
    if (value === null) {
      this.unset("depositContract");
    } else {
      this.set("depositContract", Value.fromBytes(value as Bytes));
    }
  }

  get publicKeyX(): Bytes | null {
    let value = this.get("publicKeyX");
    if (value === null) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set publicKeyX(value: Bytes | null) {
    if (value === null) {
      this.unset("publicKeyX");
    } else {
      this.set("publicKeyX", Value.fromBytes(value as Bytes));
    }
  }

  get publicKeyY(): Bytes | null {
    let value = this.get("publicKeyY");
    if (value === null) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set publicKeyY(value: Bytes | null) {
    if (value === null) {
      this.unset("publicKeyY");
    } else {
      this.set("publicKeyY", Value.fromBytes(value as Bytes));
    }
  }

  get fundingTx(): Bytes | null {
    let value = this.get("fundingTx");
    if (value === null) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set fundingTx(value: Bytes | null) {
    if (value === null) {
      this.unset("fundingTx");
    } else {
      this.set("fundingTx", Value.fromBytes(value as Bytes));
    }
  }

  get creationTimestamp(): BigInt | null {
    let value = this.get("creationTimestamp");
    if (value === null) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set creationTimestamp(value: BigInt | null) {
    if (value === null) {
      this.unset("creationTimestamp");
    } else {
      this.set("creationTimestamp", Value.fromBigInt(value as BigInt));
    }
  }

  get pubKeyTimestamp(): BigInt | null {
    let value = this.get("pubKeyTimestamp");
    if (value === null) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set pubKeyTimestamp(value: BigInt | null) {
    if (value === null) {
      this.unset("pubKeyTimestamp");
    } else {
      this.set("pubKeyTimestamp", Value.fromBigInt(value as BigInt));
    }
  }

  get fundingTimestamp(): BigInt | null {
    let value = this.get("fundingTimestamp");
    if (value === null) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set fundingTimestamp(value: BigInt | null) {
    if (value === null) {
      this.unset("fundingTimestamp");
    } else {
      this.set("fundingTimestamp", Value.fromBigInt(value as BigInt));
    }
  }
}
